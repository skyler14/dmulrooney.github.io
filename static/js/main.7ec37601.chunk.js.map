{"version":3,"sources":["MyComponent.js","App.js","reportWebVitals.js","index.js"],"names":["MyComponent","useState","defaultAccount","setDefaultAccount","errorMessage","setErrorMessage","connectText","setConnectText","statusText","setStatus","provider","setProvider","signer","setSigner","contract","setContract","price","setPrice","size","setSize","sold","setSold","maxMint","setMaxMint","contractAddress","connectWalletHandler","window","ethereum","request","method","then","result","askRightNetwork","accountChangedHandler","ethers","providers","Web3Provider","localStorage","JSON","parse","console","log","set_provide_walletconnect","params","chainId","newAccount","tmpProvider","pollingInterval","updateEthers","document","getElementsByClassName","style","style_element","eval","a","tempProvider","tempSigner","getSigner","tempContract","Contract","Chummy","abi","pri","stringPri","toString","utils","formatEther","maxSupply","siz","toNumber","currentSupply","sol","max","walletConnectProvider","WalletConnectProvider","infuraId","qrcode","enable","Mint","event","preventDefault","addr","target","value","amnt","parseEther","mint","gasLimit","tx","wait","receipt","className","id","in","type","values","onClick","onSubmit","placeholder","class","min","step","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7ec37601.chunk.js","sourcesContent":["import WalletConnectProvider from '@walletconnect/web3-provider';\r\nimport React, { useState } from 'react';\r\nimport {ethers} from 'ethers';\r\nimport Chummy from './Chummy.json';\r\nimport './MyComponent.css';\r\nconst MyComponent = () => {\r\n\r\n\tconst [defaultAccount, setDefaultAccount] = useState(null);\r\n\tconst [errorMessage, setErrorMessage] = useState(null);\r\n\tconst [connectText, setConnectText] = useState('Connect Your Wallet');\r\n\tconst [statusText, setStatus] = useState('waiting');\r\n\r\n\tconst [provider, setProvider] = useState(null);\r\n\tconst [signer, setSigner] = useState(null);\r\n\tconst [contract, setContract] = useState(null);\r\n\r\n\tconst [price, setPrice] = useState(0.08);\r\n\tconst [size, setSize] = useState(1500);\r\n\tconst [sold, setSold] = useState(\"?\");\r\n\tconst [maxMint, setMaxMint] = useState(10);\r\n\r\n\tconst contractAddress = \"0x7FE537F801848C0e56a4808965AB3D441BC89C9f\";\r\n\r\n\tconst connectWalletHandler = () => {\r\n\t\tif (window.ethereum) {\r\n\t\t\twindow.ethereum.request({method: 'eth_requestAccounts'}).then(result => {\r\n\t\t\t\taskRightNetwork()\r\n\t\t\t\taccountChangedHandler(result[0], new ethers.providers.Web3Provider(window.ethereum));\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tif (\"walletconnect\" in localStorage) {\r\n\t\t\t\tif (JSON.parse(localStorage['walletconnect'])['connected'] == true) {\r\n\t\t\t\t\tconsole.log(\"Connected wallet already\");\r\n\t\t\t\t\tset_provide_walletconnect();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsetErrorMessage(\"If you would like to use Metamask, make sure it is installed first.\");\r\n\t\t\t\tset_provide_walletconnect();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst askRightNetwork = () => {\r\n\t\twindow.ethereum.request({\r\n\t\t\tmethod: \"wallet_switchEthereumChain\",\r\n\t\t\tparams: [{\r\n\t\t\t\tchainId: \"0x4\" //rinkeby\r\n\t\t\t\t// chainId: \"0x1\" //mainnet\t\r\n\t\t\t}]\r\n\t\t});\r\n\t}\r\n\r\n\tconst accountChangedHandler = (newAccount, tmpProvider) => {\r\n\t\ttmpProvider.pollingInterval = 8500;\r\n\t\tconsole.log(tmpProvider)\r\n\t\tsetDefaultAccount(newAccount);\r\n\t\tupdateEthers(tmpProvider);\r\n\t\tsetConnectText('Wallet Connected');\r\n\t\tdocument.getElementsByClassName(\"form\")[0].style = \"display: block;\";\r\n\t\tdocument.getElementsByClassName(\"connect\")[0].style = \"display: none;\";\r\n\t\tstyle_element();\r\n\t}\r\n\tfunction style_element() {\r\n\t\teval('!function(t){t.fn.numberstyle=function(a){var e=t.extend({value:0,step:void 0,min:void 0,max:void 0},a);return this.each(function(a){var n=t(this),s=document.createElement(\"div\"),i=document.createElement(\"div\"),m=document.createElement(\"div\"),l=e.min?e.min:n.attr(\"min\"),r=e.max?e.max:n.attr(\"max\"),d=e.value?e.value:parseFloat(n.val());s.className=\"numberstyle-qty\",i.className=r&&d>=r?\"qty-btn qty-add disabled\":\"qty-btn qty-add\",i.innerHTML=\"+\",m.className=l&&d<=l?\"qty-btn qty-rem disabled\":\"qty-btn qty-rem\",m.innerHTML=\"-\",n.wrap(s),n.closest(\".numberstyle-qty\").prepend(m).append(i),t(document).off(\"click\",\".qty-btn\").on(\"click\",\".qty-btn\",function(a){var n,s=t(this).siblings(\"input\"),i=t(this).siblings(\".qty-btn\"),m=e.step?parseFloat(e.step):parseFloat(s.attr(\"step\")),l=e.min?e.min:s.attr(\"min\")?s.attr(\"min\"):void 0,r=e.max?e.max:s.attr(\"max\")?s.attr(\"max\"):void 0,d=parseFloat(s.val());t(this).hasClass(\"qty-add\")?((n=(n=d>=r?d:d+m)>r?r:n)==r&&t(this).addClass(\"disabled\"),i.removeClass(\"disabled\")):((n=(n=d<=l?d:d-m)<l?l:n)==l&&t(this).addClass(\"disabled\"),i.removeClass(\"disabled\")),s.val(n).trigger(\"change\")}),n.on(\"change\",function(){const t=parseFloat(n.val()),a=e.min?e.min:n.attr(\"min\")?n.attr(\"min\"):void 0,s=e.max?e.max:n.attr(\"max\")?n.attr(\"max\"):void 0;t>s&&n.val(s),t<a&&n.val(a)})})},t(\".numberstyle\").numberstyle()}(jQuery),$(\".numberstyle\").numberstyle();')\r\n\t}\r\n\r\n\tasync function updateEthers(tmpProvider) {\r\n\t\tlet tempProvider = tmpProvider; //new ethers.providers.Web3Provider(window.ethereum);\r\n\t\tsetProvider(tempProvider);\r\n\r\n\t\tlet tempSigner = tempProvider.getSigner();\r\n\t\tsetSigner(tempSigner);\r\n\r\n\t\tlet tempContract = new ethers.Contract(\r\n\t\t\tcontractAddress,\r\n\t\t\tChummy.abi,\r\n\t\t\ttempSigner\r\n\t\t);\r\n\t\tsetContract(tempContract);\r\n\t\tlet pri = await tempContract.price();\r\n\t\tlet stringPri = pri.toString();\r\n\t\tconsole.log(stringPri);\r\n\t\tsetPrice(ethers.utils.formatEther(stringPri));\r\n\t\tlet siz = await tempContract.maxSupply();\r\n\t\tsetSize(siz.toNumber());\r\n\t\tlet sol = await tempContract.currentSupply();\r\n\t\tsetSold(sol.toNumber());\r\n\t\tlet max = await tempContract.maxMint();\r\n\t\tsetMaxMint(max.toNumber());\r\n\t}\r\n\r\n\tasync function set_provide_walletconnect() {\r\n\t\tconsole.log(\"Using WConnect!!\")\r\n\t\tconst walletConnectProvider = new WalletConnectProvider({\r\n\t\t\tinfuraId: \"8aa2c31db7924d2ba678f43390a15308\",\r\n\t\t\tchainId: 4,\r\n\t\t\tpollingInterval: 8500,\r\n\t\t\tqrcode: true\r\n\t\t  });\r\n\t\t  await walletConnectProvider.enable();\r\n\t\t  accountChangedHandler(JSON.parse(localStorage['walletconnect'])['accounts'][0], new ethers.providers.Web3Provider(walletConnectProvider));\r\n\t}\r\n\r\n\tasync function Mint(event) {\r\n\t\tevent.preventDefault();\r\n\t\tlet addr = event.target[0].value;\r\n\t\tlet amnt = event.target[1].value;\r\n\t\tlet pri = ethers.utils.parseEther(price);\r\n\t\ttry {\r\n\t\t\tsetStatus(\"mint\")\r\n\t\t\tlet tx = await contract.mint(addr.toString(), amnt.toString(), { value: (pri * amnt).toString(), gasLimit: (350000*amnt).toString() });\r\n\t\t\tlet receipt = await tx.wait();\r\n\t\t\tconsole.log(receipt);\r\n\t\t\tsetStatus(\"complete\")\r\n\t\t\teval('$.notify(\"You have successfully minted!\", \"success\");')\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\teval('$.notify(\"Transaction failed! Are you whitelisted?\", \"warn\");')\r\n\t\t\tsetStatus(\"failed\")\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"bg-black w-full pb-12 pt-10 text-center text-white rounded-lg justify-center items-center px-8 flex flex-col gap-2 snipcss-6wpUk\">\r\n\t\t\t\t<div id=\"container\">\r\n\t\t\t\t<span id=\"text1\"></span>\r\n\t\t\t\t<span id=\"text2\"></span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<svg id=\"filters\">\r\n\t\t\t\t<defs>\r\n\t\t\t\t\t<filter id=\"threshold\">\r\n\t\t\t\t\t<feColorMatrix in=\"SourceGraphic\" type=\"matrix\" values=\"1 0 0 0 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0 1 0 0 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0 0 1 0 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0 0 0 255 -140\" />\r\n\t\t\t\t\t</filter>\r\n\t\t\t\t</defs>\r\n\t\t\t\t</svg>\r\n\t\t\t\t<input id=\"etheraccount\" type=\"hidden\" value={defaultAccount}></input>\r\n\t\t\t\t<input id=\"price\" type=\"hidden\" value={price}></input>\r\n\t\t\t\t<input id=\"size\" type=\"hidden\" value={size}></input>\r\n\t\t\t\t<input id=\"maxMint\" type=\"hidden\" value={maxMint}></input>\r\n\t\t\t\t<input id=\"sold\" type=\"hidden\" value={sold}></input>\r\n\t\t\t\t<input id=\"status\" type=\"hidden\" value={statusText}></input>\r\n\t\t\t\t<div className=\"flex justify-between w-full uppercase px-4 text-sm tracking-widest\">\r\n\t\t\t\t<span> Price </span>\r\n\t\t\t\t<span> total minted </span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"flex justify-between w-full font-bold px-4 text-xl\">\r\n\t\t\t\t<span> {price} </span>\r\n\t\t\t\t<span> {sold} / {size} </span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"h-full gap-4 w-full mt-9\">\r\n\t\t\t\t<button className=\"connect bg-white w-full text-black rounded-full px-8 py-3.5 transform duration-200 hover:scale-90 font-avenir-bold text-xl snip-button\" onClick={connectWalletHandler} id=\"connectWallet\"> {connectText} </button>\r\n\t\t\t\t<div id=\"mintform\">\r\n\t\t\t\t\t<form onSubmit={Mint} className=\"form\">\r\n\t\t\t\t\t\t<input className=\"in\" type=\"hidden\" placeholder=\"Account\" value={defaultAccount} />\r\n\t\t\t\t\t\t<input class=\"numberstyle\" type=\"number\" min=\"1\" step=\"1\" max=\"10\" value=\"1\"></input><br/>\r\n\t\t\t\t\t\t<button className=\"mint bg-white w-full text-black rounded-full px-8 py-3.5 transform duration-200 hover:scale-90 font-avenir-bold text-xl snip-button\" type=\"submit\">Mint</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MyComponent;","import MyComponent from './MyComponent';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <MyComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}